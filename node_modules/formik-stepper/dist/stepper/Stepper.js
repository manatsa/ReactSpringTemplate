import React, { useEffect, useState } from "react";
import Step from "./Step";
import "./styles.css";
var Stepper = function (_a) {
    var step = _a.activeStep, steps = _a.steps;
    var _b = useState(step), activeStep = _b[0], setActiveStep = _b[1];
    useEffect(function () {
        setActiveStep(step);
    }, [step]);
    return (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "stepper-horizontal" }, React.Children.map(steps, function (child, index) {
            if (!React.isValidElement(child))
                return null;
            var _a = child.props, icon = _a.icon, label = _a.label;
            return (React.createElement(Step, { key: "step-".concat(index), label: label, active: activeStep === index, done: activeStep > index, isFirst: index === 0, isLast: index === React.Children.count(steps) - 1, icon: typeof icon === "function"
                    ? icon({
                        active: activeStep === index,
                        done: activeStep > index,
                    })
                    : index + 1 }));
        }))));
};
export default React.memo(Stepper, function (props, nextProps) { return props.activeStep === nextProps.activeStep; });
